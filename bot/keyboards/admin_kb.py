from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

def get_admin_main_keyboard():
    """
    Create main admin keyboard.
    """
    buttons = [
        [InlineKeyboardButton(text="üìù –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –º–µ–Ω—é –≤ –∫–∞–Ω–∞–ª", callback_data="publish_menu")],
        [InlineKeyboardButton(text="üìä –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–∞–π—Å-–ª–∏—Å—Ç—ã", callback_data="update_prices")],
        [InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–µ–Ω—é", callback_data="menu_settings")],
        [InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="statistics")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_price_update_keyboard():
    """
    Create keyboard for updating price posts.
    """
    buttons = [
        [InlineKeyboardButton(text="üì± –ù–æ–≤—ã–µ iPhone", callback_data="update_price:new_iphone")],
        [InlineKeyboardButton(text="üì± –ë/–£ iPhone", callback_data="update_price:used_iphone")],
        [InlineKeyboardButton(text="üéß AirPods –∏ Apple Watch", callback_data="update_price:airpods_watch")],
        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_admin")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_menu_settings_keyboard():
    """
    Create keyboard for menu settings.
    """
    buttons = [
        [InlineKeyboardButton(text="üìå –ó–∞–∫—Ä–µ–ø–∏—Ç—å/–û—Ç–∫—Ä–µ–ø–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ", callback_data="toggle_pin")],
        [InlineKeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å –º–µ–Ω—é", callback_data="refresh_menu")],
        [InlineKeyboardButton(text="üìÑ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—É–Ω–∫—Ç—ã", callback_data="static_items")],
        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_admin")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_confirmation_keyboard(action, item_id=None):
    """
    Create confirmation keyboard.
    
    Args:
        action: Action to confirm (e.g., 'publish', 'update')
        item_id: Optional item ID for context
    """
    confirm_data = f"confirm_{action}"
    cancel_data = "cancel"
    
    if item_id:
        confirm_data += f":{item_id}"
    
    buttons = [
        [
            InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=confirm_data),
            InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=cancel_data)
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_back_keyboard():
    """
    Create a simple back button keyboard.
    """
    buttons = [
        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_admin")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_static_items_keyboard(items):
    """
    Create keyboard for managing static menu items.
    
    Args:
        items: List of static menu items from the database
    """
    buttons = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é
    for item in items:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å URL –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—É–Ω–∫—Ç–∞
        url_status = "‚úÖ" if item['url'] else "‚ùå"
        buttons.append([InlineKeyboardButton(
            text=f"{url_status} {item['title']}", 
            callback_data=f"update_static:{item['id']}"
        )])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞
    buttons.append([InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="menu_settings")])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)
