from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command, CommandStart

from bot.keyboards import get_admin_main_keyboard
from database import Database
from config import ADMIN_IDS

# Initialize router
router = Router()


@router.message(CommandStart())
async def cmd_start(message: Message):
    """Handle /start command."""
    user_id = message.from_user.id
    is_admin = user_id in ADMIN_IDS
    
    greeting = (
        f"üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.first_name}!\n\n"
        f"–Ø –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–µ–Ω—é –≤ Telegram-–∫–∞–Ω–∞–ª–µ."
    )
    
    if is_admin:
        greeting += (
            "\n\n‚úÖ –£ –≤–∞—Å –µ—Å—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /admin –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è."
        )
        await message.answer(greeting)
    else:
        greeting += (
            "\n\n‚ÑπÔ∏è –≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –∫–∞–Ω–∞–ª–∞."
        )
        await message.answer(greeting)


@router.message(Command("help"))
async def cmd_help(message: Message):
    """Handle /help command."""
    user_id = message.from_user.id
    is_admin = user_id in ADMIN_IDS
    
    help_text = (
        "üìö <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º</b>\n\n"
        "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
    )
    
    if is_admin:
        help_text += (
            "\n<b>–ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:</b>\n"
            "/admin - –û—Ç–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n"
            "\n<b>–í –ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤—ã –º–æ–∂–µ—Ç–µ:</b>\n"
            "‚Ä¢ –ü—É–±–ª–∏–∫–æ–≤–∞—Ç—å –º–µ–Ω—é –≤ –∫–∞–Ω–∞–ª\n"
            "‚Ä¢ –û–±–Ω–æ–≤–ª—è—Ç—å –ø—Ä–∞–π—Å-–ª–∏—Å—Ç—ã\n"
            "‚Ä¢ –£–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –º–µ–Ω—é\n"
            "‚Ä¢ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n"
        )
    
    await message.answer(help_text)


@router.callback_query(F.data.startswith("menu_item:"))
async def handle_menu_item_click(callback: CallbackQuery):
    """Handle clicks on menu items from users."""
    # This would be triggered if users click on menu items in the channel
    # For most cases, we'll use URL buttons that open directly
    # This handler is for items that don't have URLs
    
    item_id = int(callback.data.split(":")[1])
    
    db = Database()
    item = await db.get_menu_item(item_id)
    
    if not item:
        await callback.answer("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞", show_alert=True)
        return
    
    # Different responses based on item type
    if item['type'] == 'info':
        # These would typically have content stored in the database
        # For now, we'll use placeholder responses
        responses = {
            "‚úÖ –ì–∞—Ä–∞–Ω—Ç–∏—è": (
                "üîπ –ù–∞ –≤—Å–µ –Ω–æ–≤—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≥–∞—Ä–∞–Ω—Ç–∏—è 1 –≥–æ–¥\n"
                "üîπ –ù–∞ –±/—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≥–∞—Ä–∞–Ω—Ç–∏—è 1 –º–µ—Å—è—Ü\n"
                "üîπ –ì–∞—Ä–∞–Ω—Ç–∏—è —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è –Ω–∞ –∑–∞–≤–æ–¥—Å–∫–∏–µ –¥–µ—Ñ–µ–∫—Ç—ã"
            ),
            "üè† –ê–¥—Ä–µ—Å / –ö–∞–∫ –Ω–∞—Å –Ω–∞–π—Ç–∏?": (
                "üè¢ –ù–∞—à –∞–¥—Ä–µ—Å: –≥. –û—Ä—Å–∫, –ø—Ä. –õ–µ–Ω–∏–Ω–∞, 21\n"
                "üïô –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: –ü–Ω-–ü—Ç —Å 10:00 –¥–æ 19:00, –°–±-–í—Å —Å 10:00 –¥–æ 17:00\n"
                "üìç –û—Ä–∏–µ–Ω—Ç–∏—Ä: –¢–¶ ¬´–Ø–±–ª–æ—á–Ω—ã–π –°–ø–∞—Å¬ª, 2 —ç—Ç–∞–∂"
            ),
            "üí≥ –†–∞—Å—Å—Ä–æ—á–∫–∞ / –ö—Ä–µ–¥–∏—Ç –æ—Ç 1%": (
                "üí≥ –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º —Ä–∞—Å—Å—Ä–æ—á–∫—É –∏ –∫—Ä–µ–¥–∏—Ç –æ—Ç 1%\n"
                "üìù –î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º —Ç–æ–ª—å–∫–æ –ø–∞—Å–ø–æ—Ä—Ç\n"
                "‚è± –†–µ—à–µ–Ω–∏–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è –∑–∞ 15 –º–∏–Ω—É—Ç"
            ),
            "üöö –î–æ—Å—Ç–∞–≤–∫–∞": (
                "üöö –î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –≥–æ—Ä–æ–¥—É - –±–µ—Å–ø–ª–∞—Ç–Ω–æ\n"
                "üåç –î–æ—Å—Ç–∞–≤–∫–∞ –≤ –¥—Ä—É–≥–∏–µ –≥–æ—Ä–æ–¥–∞ - –ø–æ —Ç–∞—Ä–∏—Ñ–∞–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π\n"
                "‚è± –°—Ä–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏: 1-2 –¥–Ω—è"
            ),
            "üí∞ –û–ø–ª–∞—Ç–∞": (
                "üíµ –ù–∞–ª–∏—á–Ω—ã–º–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏\n"
                "üí≥ –ë–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç–æ–π\n"
                "üì± –ü–µ—Ä–µ–≤–æ–¥–æ–º –Ω–∞ –∫–∞—Ä—Ç—É"
            ),
            "‚Äº –û—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã": (
                "‚ùì <b>–ú–æ–∂–Ω–æ –ª–∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –ø–µ—Ä–µ–¥ –ø–æ–∫—É–ø–∫–æ–π?</b>\n"
                "‚úÖ –î–∞, –º—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏\n\n"
                "‚ùì <b>–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å —Ä–∞—Å—Å—Ä–æ—á–∫–∞ –±–µ–∑ –ø–µ—Ä–µ–ø–ª–∞—Ç—ã?</b>\n"
                "‚úÖ –î–∞, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Ä–∞—Å—Å—Ä–æ—á–∫—É 0% –Ω–∞ 3 –º–µ—Å—è—Ü–∞\n\n"
                "‚ùì <b>–†–∞–±–æ—Ç–∞–µ—Ç–µ –ª–∏ –≤—ã —Å —Ä–µ–≥–∏–æ–Ω–∞–º–∏?</b>\n"
                "‚úÖ –î–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã –ø–æ –≤—Å–µ–π –†–æ—Å—Å–∏–∏"
            )
        }
        
        response = responses.get(item['title'], "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–∑–∂–µ")
        await callback.answer(response, show_alert=True)
    
    elif item['type'] == 'price' and item['is_dynamic']:
        # For dynamic price items without URLs yet
        await callback.answer("–ü—Ä–∞–π—Å-–ª–∏—Å—Ç –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω", show_alert=True)
    
    else:
        # Generic response for other items
        await callback.answer("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–∑–∂–µ", show_alert=True)
